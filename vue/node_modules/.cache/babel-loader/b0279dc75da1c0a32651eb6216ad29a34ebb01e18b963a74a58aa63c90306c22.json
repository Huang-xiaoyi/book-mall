{"ast":null,"code":"import { Message } from \"element-ui\";\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      form: {},\n      username: \"\",\n      password: \"\",\n      role: \"\"\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      //判断是否为空\n      if (!this.form.username) {\n        this.$message.warning(\"用户名不能为空\");\n        return;\n      }\n      if (!this.form.password) {\n        this.$message.warning(\"密码不能为空\");\n        return;\n      }\n      request.post(\"account/login\", this.form).then(res => {\n        if (res.code === '0') {\n          let user = res.data.user;\n          let token = res.data.token;\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userInfo\", JSON.stringify(user));\n          this.$message.success('登录成功！');\n          if (user.role == 'user') {\n            location.href = '/front/index';\n          } else {\n            location.href = '/manage/home';\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Message","request","data","form","username","password","role","created","methods","login","$message","warning","post","then","res","code","user","token","localStorage","setItem","JSON","stringify","success","location","href","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-div\">\r\n    <div class=\"home-form\">\r\n      <h1 class=\"home-name\">网上书城</h1>\r\n      <el-form :model=\"form\"  ref=\"formRef\">\r\n      <el-input class=\"input-bar\" placeholder=\"用户名\" v-model=\"form.username\" clearable prefix-icon=\"el-icon-user\" ></el-input>\r\n      <el-input class=\"input-bar\" placeholder=\"密码\" v-model=\"form.password\" show-password prefix-icon=\"el-icon-lock\" ></el-input>\r\n      <el-form-item prop=\"role\" >\r\n        <el-select v-model=\"form.role\" placeholder=\"请选择角色\"  class=\"input-bar\">\r\n          <el-option label=\"用户\" value=\"user\"></el-option>\r\n          <el-option label=\"管理员\" value=\"admin\"></el-option>\r\n          <el-option label=\"商家\" value=\"merchant\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-button class=\"home-btn\" type=\"primary\" @click=\"login\">登录</el-button>\r\n        <div class=\"home-jump\">\r\n         没有账号？<a class=\"home-jump-a\" href=\"/register\">注册</a>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Message } from \"element-ui\";\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n      username: \"\",\r\n      password: \"\",\r\n      role: \"\",\r\n    };\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    login() {\r\n      //判断是否为空\r\n      if (!this.form.username){\r\n\r\n        this.$message.warning(\"用户名不能为空\")\r\n        return\r\n      }\r\n      if (!this.form.password){\r\n        this.$message.warning(\"密码不能为空\")\r\n        return\r\n      }\r\n        request.post(\"account/login\", this.form).then(res => {\r\n          if(res.code === '0') {\r\n            let user = res.data.user;\r\n            let token = res.data.token;\r\n            localStorage.setItem(\"token\",token);\r\n            localStorage.setItem(\"userInfo\",JSON.stringify(user))\r\n            this.$message.success('登录成功！')\r\n            if (user.role=='user'){\r\n              location.href='/front/index'\r\n            }else {\r\n              location.href='/manage/home'\r\n            }\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n};\r\n</script>\r\n<style scoped>\r\n@import \"@/assets/css/manage.css\";\r\n</style>\r\n"],"mappings":"AAwBA,SAAAA,OAAA;AACA,OAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,QAAA;MACAC,QAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,MAAA;MACA;MACA,UAAAN,IAAA,CAAAC,QAAA;QAEA,KAAAM,QAAA,CAAAC,OAAA;QACA;MACA;MACA,UAAAR,IAAA,CAAAE,QAAA;QACA,KAAAK,QAAA,CAAAC,OAAA;QACA;MACA;MACAV,OAAA,CAAAW,IAAA,uBAAAT,IAAA,EAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,IAAAC,IAAA,GAAAF,GAAA,CAAAZ,IAAA,CAAAc,IAAA;UACA,IAAAC,KAAA,GAAAH,GAAA,CAAAZ,IAAA,CAAAe,KAAA;UACAC,YAAA,CAAAC,OAAA,UAAAF,KAAA;UACAC,YAAA,CAAAC,OAAA,aAAAC,IAAA,CAAAC,SAAA,CAAAL,IAAA;UACA,KAAAN,QAAA,CAAAY,OAAA;UACA,IAAAN,IAAA,CAAAV,IAAA;YACAiB,QAAA,CAAAC,IAAA;UACA;YACAD,QAAA,CAAAC,IAAA;UACA;QACA;UACA,KAAAd,QAAA,CAAAe,KAAA,CAAAX,GAAA,CAAAY,GAAA;QACA;MACA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}