{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      bookData: [],\n      typeData: [],\n      searchQuery: '',\n      selectedType: null,\n      pageNum: 1,\n      pageSize: 20,\n      total: 0,\n      defaultCover: require('@/assets/img/carousel_2.png')\n    };\n  },\n  created() {\n    this.loadData();\n    this.loadTypeData();\n  },\n  methods: {\n    loadData() {\n      request.get('/book/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.searchQuery,\n          typeId: this.selectedType\n        }\n      }).then(res => {\n        if (res.code === '0') {\n          this.bookData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadTypeData() {\n      request.get('/type/selectAll').then(res => {\n        if (res.code === '0') {\n          this.typeData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    searchBooks() {\n      this.pageNum = 1;\n      this.loadData();\n    },\n    filterByType(typeId) {\n      this.selectedType = typeId;\n      this.pageNum = 1;\n      request.get('/book/filterPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.searchQuery,\n          typeId: this.selectedType\n        }\n      }).then(res => {\n        if (res.code === '0') {\n          this.bookData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.loadData();\n    },\n    viewBookDetail(book) {\n      // 这里可以跳转到图书详情页\n      console.log('查看图书详情:', book);\n      this.$router.push({\n        path: \"BookDetail\",\n        query: {\n          book: JSON.stringify()\n        }\n      });\n    },\n    resetSearch() {\n      this.searchQuery = '';\n      this.selectedType = null;\n      this.pageNum = 1;\n      this.loadData();\n    }\n  }\n};","map":{"version":3,"names":["request","data","bookData","typeData","searchQuery","selectedType","pageNum","pageSize","total","defaultCover","require","created","loadData","loadTypeData","methods","get","params","name","typeId","then","res","code","list","$message","error","msg","searchBooks","filterByType","handleCurrentChange","viewBookDetail","book","console","log","$router","push","path","query","JSON","stringify","resetSearch"],"sources":["src/views/front/Book.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-container\">\r\n    <!-- 搜索区域 -->\r\n    <div class=\"search-section\">\r\n      <div class=\"search-box\">\r\n        <el-input\r\n          class=\"search-input\"\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"搜索图书...\"\r\n          suffix-icon=\"el-icon-search\"\r\n          @keyup.enter.native=\"searchBooks\">\r\n        </el-input>\r\n<!--        suffix-icon 框尾部图标，keyup.enter.native回车键触发，当组件是html原生组件时不需要.native-->\r\n        <el-button type=\"primary\" class=\"search-button\" @click=\"searchBooks\">搜索</el-button>\r\n      </div>\r\n\r\n      <!-- 分类筛选 -->\r\n      <div class=\"filter-section\">\r\n        <div class=\"filter-title\">分类筛选:</div>\r\n        <div class=\"filter-tags\">\r\n          <el-tag\r\n            v-for=\"type in typeData\"\r\n            :key=\"type.id\"\r\n            :type=\"selectedType === type.id ? 'primary' : ''\"\r\n            @click=\"filterByType(type.id)\"\r\n            class=\"filter-tag\">\r\n            {{ type.name }}\r\n          </el-tag>\r\n          <el-tag\r\n            @click=\"filterByType(null)\"\r\n            :type=\"selectedType === null ? 'primary' : ''\"\r\n            class=\"filter-tag\">\r\n            全部\r\n          </el-tag>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 图书列表 -->\r\n    <div class=\"book-list\">\r\n      <div v-if=\"bookData.length === 0\" class=\"no-data\">\r\n        暂无图书数据\r\n      </div>\r\n\r\n      <div v-else class=\"book-grid\">\r\n        <div\r\n          v-for=\"book in bookData\"\r\n          :key=\"book.id\"\r\n          class=\"book-card\"\r\n          @click=\"viewBookDetail(book)\">bo\r\n          <div class=\"book-cover\">\r\n            <img :src=\"book.pic || defaultCover\" :alt=\"book.name\" class=\"cover-img\">\r\n          </div>\r\n          <div class=\"book-info\">\r\n            <div class=\"book-title\">{{ book.name }}</div>\r\n            <div class=\"book-author\">{{ book.author }}</div>\r\n            <div class=\"book-publisher\">{{ book.publisher }}</div>\r\n            <div class=\"book-price\">¥{{ book.price }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination-section\" v-if=\"total > 0\">\r\n      <el-pagination\r\n        background\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pageNum\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      bookData: [],\r\n      typeData: [],\r\n      searchQuery: '',\r\n      selectedType: null,\r\n      pageNum: 1,\r\n      pageSize: 20,\r\n      total: 0,\r\n      defaultCover: require('@/assets/img/carousel_2.png')\r\n    }\r\n  },\r\n  created() {\r\n    this.loadData();\r\n    this.loadTypeData();\r\n  },\r\n  methods: {\r\n    loadData() {\r\n      request.get('/book/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.searchQuery,\r\n          typeId: this.selectedType\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '0') {\r\n          this.bookData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n\r\n    loadTypeData() {\r\n      request.get('/type/selectAll').then(res => {\r\n        if (res.code === '0') {\r\n          this.typeData = res.data;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n\r\n    searchBooks() {\r\n      this.pageNum = 1;\r\n      this.loadData();\r\n    },\r\n\r\n    filterByType(typeId) {\r\n      this.selectedType = typeId;\r\n      this.pageNum = 1;\r\n      request.get('/book/filterPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.searchQuery,\r\n          typeId: this.selectedType\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '0') {\r\n          this.bookData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n\r\n    handleCurrentChange(pageNum) {\r\n      this.pageNum = pageNum;\r\n      this.loadData();\r\n    },\r\n\r\n    viewBookDetail(book) {\r\n      // 这里可以跳转到图书详情页\r\n      console.log('查看图书详情:', book);\r\n      this.$router.push({path:\"BookDetail\", query:{book:JSON.stringify()}});\r\n    },\r\n\r\n    resetSearch() {\r\n      this.searchQuery = '';\r\n      this.selectedType = null;\r\n      this.pageNum = 1;\r\n      this.loadData();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.book-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.search-section {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,.1);\r\n}\r\n\r\n.search-box {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.search-button {\r\n  width: 100px;\r\n}\r\n\r\n.filter-section {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.filter-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-right: 15px;\r\n  white-space: nowrap;\r\n}\r\n\r\n.filter-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-tag {\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.filter-tag:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n.book-list {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  padding: 50px 0;\r\n  color: #999;\r\n  font-size: 16px;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,.1);\r\n  transition: all 0.3s;\r\n  cursor: pointer;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,.15);\r\n}\r\n\r\n.book-cover {\r\n  height: 240px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.cover-img {\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-info {\r\n  padding: 12px;\r\n}\r\n\r\n.book-title {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  margin-bottom: 6px;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  height: 36px;\r\n}\r\n\r\n.book-author {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-bottom: 4px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.book-publisher {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-bottom: 8px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.book-price {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #e64545;\r\n}\r\n\r\n.pagination-section {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,.1);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .book-container {\r\n    padding: 10px;\r\n  }\r\n\r\n  .book-grid {\r\n    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\r\n    gap: 15px;\r\n  }\r\n\r\n  .book-cover {\r\n    height: 180px;\r\n  }\r\n\r\n  .search-box {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .search-input {\r\n    margin-right: 0;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA8EA,OAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,WAAA;MACAC,YAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,YAAA,EAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACAF,SAAA;MACAZ,OAAA,CAAAe,GAAA;QACAC,MAAA;UACAV,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAU,IAAA,OAAAb,WAAA;UACAc,MAAA,OAAAb;QACA;MACA,GAAAc,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAnB,QAAA,GAAAkB,GAAA,CAAAnB,IAAA,CAAAqB,IAAA;UACA,KAAAd,KAAA,GAAAY,GAAA,CAAAnB,IAAA,CAAAO,KAAA;QACA;UACA,KAAAe,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IAEAZ,aAAA;MACAb,OAAA,CAAAe,GAAA,oBAAAI,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAlB,QAAA,GAAAiB,GAAA,CAAAnB,IAAA;QACA;UACA,KAAAsB,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IAEAC,YAAA;MACA,KAAApB,OAAA;MACA,KAAAM,QAAA;IACA;IAEAe,aAAAT,MAAA;MACA,KAAAb,YAAA,GAAAa,MAAA;MACA,KAAAZ,OAAA;MACAN,OAAA,CAAAe,GAAA;QACAC,MAAA;UACAV,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAU,IAAA,OAAAb,WAAA;UACAc,MAAA,OAAAb;QACA;MACA,GAAAc,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAnB,QAAA,GAAAkB,GAAA,CAAAnB,IAAA,CAAAqB,IAAA;UACA,KAAAd,KAAA,GAAAY,GAAA,CAAAnB,IAAA,CAAAO,KAAA;QACA;UACA,KAAAe,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IAEAG,oBAAAtB,OAAA;MACA,KAAAA,OAAA,GAAAA,OAAA;MACA,KAAAM,QAAA;IACA;IAEAiB,eAAAC,IAAA;MACA;MACAC,OAAA,CAAAC,GAAA,YAAAF,IAAA;MACA,KAAAG,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA;UAAAN,IAAA,EAAAO,IAAA,CAAAC,SAAA;QAAA;MAAA;IACA;IAEAC,YAAA;MACA,KAAAnC,WAAA;MACA,KAAAC,YAAA;MACA,KAAAC,OAAA;MACA,KAAAM,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}